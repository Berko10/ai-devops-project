name: Terraform CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure AWS Defaults
      - name: Set AWS Region Defaults
        run: |
          AWS_REGION=${{ secrets.AWS_REGION:-"us-east-1" }}
          echo "AWS_REGION=$AWS_REGION" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=$AWS_REGION" >> $GITHUB_ENV
          echo "✅ AWS region set to $AWS_REGION"

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.6.6'

      # Terraform Init & Backend Setup
      - name: Terraform Backend Init & Apply
        working-directory: terraform/backend
        run: |
          terraform init
          terraform apply -auto-approve

      # Extract Backend Outputs
      - name: Extract Backend Outputs
        working-directory: terraform/backend
        run: |
          export TF_BUCKET_NAME=$(terraform output -raw tf_state_bucket_name)
          export DYNAMO_TABLE_NAME=$(terraform output -raw dynamo_table_name)

          echo "TF_BUCKET_NAME=$TF_BUCKET_NAME" >> $GITHUB_ENV
          echo "DYNAMO_TABLE_NAME=$DYNAMO_TABLE_NAME" >> $GITHUB_ENV
          echo "✅ Extracted Outputs: TF_BUCKET_NAME=$TF_BUCKET_NAME, DYNAMO_TABLE_NAME=$DYNAMO_TABLE_NAME"

      # Terraform Init (Main)
      - name: Terraform Main Init
        working-directory: terraform/main
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.TF_BUCKET_NAME }}" \
            -backend-config="key=main/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.DYNAMO_TABLE_NAME }}"
          echo "✅ Terraform main initialized with bucket $TF_BUCKET_NAME and table $DYNAMO_TABLE_NAME"

      # Extract and Use ECR Outputs
      - name: Extract ECR Outputs
        working-directory: terraform/main
        run: |
          export ECR_REPO_NAME=$(terraform output -raw ecr_repo_name || echo "")
          if [ -n "$ECR_REPO_NAME" ]; then
            echo "ECR_REPO_NAME=$ECR_REPO_NAME" >> $GITHUB_ENV
            echo "✅ ECR repo name extracted: $ECR_REPO_NAME"
          else
            echo "❌ WARNING: ECR repo name not found!"
          fi

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        if: env.ECR_REPO_NAME != ''
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:latest
          docker build -t $IMAGE_URI ./app
          docker push $IMAGE_URI
          echo "✅ Docker image pushed to $IMAGE_URI"

      # Run Unit Tests
      - name: Run Unit Tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pytest tests/

      # Terraform Plan & Apply (Main)
      - name: Terraform Plan & Apply (Main)
        working-directory: terraform/main
        run: |
          terraform plan
          terraform apply -auto-approve
